export TERM=xterm-256color
# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:$PATH

# Turn off homebrew analytics on this machine
export HOMEBREW_NO_ANALYTICS=1

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# path to pyret script dir
export PATH=$HOME/git/pyret-lang/src/scripts:$PATH

# Mono bin
export PATH=$PATH:/Library/Frameworks/Mono.framework/Versions/Current/bin/

# Path to asdf
export ASDF_DIR=/usr/local/opt/asdf

export LESS='-RiFX'

POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=( status background_jobs )
POWERLEVEL9K_CUSTOM_KERL="if [ -z \"\$(kerl prompt)\" ]; then echo \"(none)\"; else echo \"\$(kerl prompt)\" ; fi"
POWERLEVEL9K_CUSTOM_KERL_BACKGROUND="blue"
POWERLEVEL9K_CUSTOM_KERL_FOREGROUND="white"
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_LEFT_SEGMENT_SEPARATOR=""
POWERLEVEL9K_RIGHT_SEGMENT_SEPARATOR=""
#POWERLEVEL9K_MODE='awesome-fontconfig'
# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# TODO Set POWERLEVEL9K_CONTEXT_TEMPLATE to control context segment
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(dir vcs)
ZSH_THEME="powerlevel9k/powerlevel9k"


# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
ONEPASS_ACCOUNTS=( alertlogic )
plugins=(themes iterm2 aws 1password kerl git asdf pyenv ssh-agent mix-fast)

source $ZSH/oh-my-zsh.sh

# User configuration

# Include homebrew-managed zsh-completions
export fpath=(/usr/local/share/zsh-completions $fpath)
# Include homebrew-managed zsh-syntax-highlighting
source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# pyenv vs brew
#
# pyenv stores all its installed versions and virtualenvs inside its pyenv-version-specific dir
# inside /usr/local/Cellar/pyenv/${version}
#
# As a consequence, if homebrew upgrades pyenv, you either need to migrate (no support I know of
# aside from manual copy of artefacts) the existing setup, or reinstall all your versions.
# It's a bit long-winded but should be reasonable to just run the same setup steps every time pyenv
# gets upgraded.

pyenv_post_install_setup() {
    version2=2.7.14
    version3=3.6.4
    
    pyenv install ${version2}
    pyenv install ${version3}

    pyenv_neovim_venv_setup neovim2 $version2
    pyenv_neovim_venv_setup neovim3 $version3
}

# Usage: pyenv_neovim_venv_setup neovim2 2.7.14
# Installs required plugins from pip for neovim
pyenv_neovim_venv_setup() {
    venv=$1
    pyvsn=$2

    pyenv virtualenv $pyvsn $venv
    pyenv activate $venv
    pip=$(pyenv which pip)
    $pip install --upgrade pip
    $pip install neovim flake8
    source deactivate
}

asdf_post_upgrade_setup() {
    # elixir, erlang, rebar, ruby
    asdf plugin-add elixir https://github.com/asdf-vm/asdf-elixir
    asdf plugin-add erlang https://github.com/asdf-vm/asdf-erlang
    asdf plugin-add rebar https://github.com/Stratus3D/asdf-rebar.git
    asdf plugin-add ruby https://github.com/asdf-vm/asdf-ruby.git

    asdf install erlang 20.2
    asdf install erlang 20.3.6
    asdf install erlang 19.3.6.9
    asdf install rebar 3.5.0
    asdf install elixir 1.6.5
    asdf install ruby 2.5.1
}


# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
source ~/.iterm2_shell_integration.zsh

# From
#
# to enable a nice Python REPL

export PYTHONSTARTUP=~/.pythonrc

PATH="/usr/local/opt/python/libexec/bin:$PATH"
# Virtualenvwrapper things
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/Devel
source /usr/local/bin/virtualenvwrapper.sh

# make tex use system perl
export TEXLIVE_WINDOWS_TRY_EXTERNAL_PERL=1



eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
export PATH="/usr/local/sbin:$PATH"

. $HOME/.asdf/asdf.sh

. $HOME/.asdf/completions/asdf.bash
